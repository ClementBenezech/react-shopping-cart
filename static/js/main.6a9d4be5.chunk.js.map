{"version":3,"sources":["components/ProductsData.js","components/AppReducer.js","components/LocalStorage.js","components/Store.js","components/OrderItem.jsx","components/OrderConfirmation.jsx","components/Product.jsx","components/Products.jsx","components/CartItem.jsx","components/ShoppingCart.jsx","components/LoginMenu.jsx","components/Shop.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["products","initialState","cartProducts","user","fullName","status","persistedState","serialState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","state","action","type","payload","findIndex","currentProduct","id","map","cartProduct","quantity","newCartProducts","filter","find","OrderItem","props","data","item","useDispatch","bottom","className","src","image","name","OrderConfirmation","reactElementsArray","currentCartItems","useSelector","currentUserName","class","href","to","Product","currentItemQuantity","dispatch","productData","onClick","description","price","Products","CartItem","ShoppingCart","totalCartAmount","orderLink","start","end","duration","LoginMenu","useState","userName","setUserName","onSubmit","e","preventDefault","onChange","target","value","Shop","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","subscribe","stringify","setItem","console","log","saveState","getState","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6a9d4be5.chunk.js","sourcesContent":["export const products = [\r\n    {   'id' : 0,\r\n        'name' : 'HTML 5',\r\n        'description' : 'Clean, accessible && W3C compliant',\r\n        'price' : 300,\r\n        'image' : \"html5\"\r\n    },\r\n    {   'id' : 1,\r\n        'name' : 'Sass / Scss',\r\n        'description' : 'Clean and nested Scss stylesheets. BEM style.',\r\n        'price' : 400,\r\n        'image' : \"sass\"\r\n    },\r\n    {   'id' : 2,\r\n        'name' : 'Vanilla JS',\r\n        'description' : 'Mmmmhhh, Vanilla... No. seriously.',\r\n        'price' : 500,\r\n        'image' : \"jsvanilla\"\r\n    },\r\n    {   'id' : 3,\r\n        'name' : 'ReactJS',\r\n        'description' : \"Functional style. It's all about the hooks!\",\r\n        'price' : 600,\r\n        'image' : \"react\"\r\n    },\r\n    {   'id' : 4,\r\n        'name' : 'Redux',\r\n        'description' : 'In the states, they reduced the stores',\r\n        'price' : 300,\r\n        'image' : \"redux\"\r\n    },\r\n    {   'id' : 5,\r\n        'name' : 'React Router',\r\n        'description' : \"So you know where you're going\",\r\n        'price' : 200,\r\n        'image' : \"react-router\"\r\n    },\r\n    {   'id' : 6,\r\n        'name' : 'Native French',\r\n        'description' : \"It's like... you know. Super Fluent!\",\r\n        'price' : \"279\",\r\n        'image' : \"france\"\r\n    },\r\n    {   'id' : 7,\r\n        'name' : 'Fluent english',\r\n        'description' : \"For real!\",\r\n        'price' : \"359\",\r\n        'image' : \"england\"\r\n    },\r\n    {   'id' : 8,\r\n        'name' : 'Clement Benezech',\r\n        'description' : \"clement.benezech@gmail.com\",\r\n        'price' : \"2500\",\r\n        'image' : \"clem\"\r\n    },\r\n    \r\n    \r\n]","const initialState = {cartProducts: [], user : {fullName : null, status: 'guest'}}\r\n// Use the initialState as a default value\r\nexport default function rootReducer(state = initialState, action) {\r\n  // The reducer normally looks at the action type field to decide what happens  \r\n  switch (action.type) {\r\n    case \"user/PutUserNameInState\": {\r\n      return {\r\n        ...state,\r\n        user : {fullName : action.payload, status: 'authentified'}\r\n      }\r\n      \r\n    }\r\n    case 'product/addToCart': {\r\n      /*Handling the addProduct case: \r\n        If the product already exists in the state, then increment its quantity by specified quantity\r\n        Else, the product is added to the state with the specified quantity*/\r\n      if (state.cartProducts.findIndex(currentProduct => currentProduct.id === action.payload.id) != -1) {\r\n        return {\r\n          ...state,      \r\n          cartProducts : state.cartProducts.map(cartProduct => cartProduct.id === action.payload.id ? {\r\n              ...cartProduct, quantity: cartProduct.quantity + action.payload.quantity\r\n          } : cartProduct\r\n          ) \r\n        }\r\n      }\r\n      else {\r\n        return {\r\n          ...state,\r\n          cartProducts: [...state.cartProducts, action.payload]\r\n        }\r\n      }\r\n      \r\n  }\r\n      \r\n    case 'product/removeFromCart' : {\r\n      //In case of deletion, we look for a martching ID with filter to return a list without the removed item\r\n      const newCartProducts = state.cartProducts.filter (cartProduct => cartProduct.id !== action.payload.id);\r\n      return {\r\n        ...state,\r\n              cartProducts : newCartProducts\r\n      }\r\n    }\r\n\r\n    case 'product/decrement' : {\r\n        \r\n      if (state.cartProducts.find(currentProduct => currentProduct.id === action.payload.id).quantity === 1) {\r\n        const newCartProducts = state.cartProducts.filter(cartProduct => cartProduct.id !== action.payload.id);\r\n          return {\r\n              ...state,\r\n                    cartProducts : newCartProducts\r\n            } \r\n          }\r\n        else {\r\n        return {\r\n          ...state,      \r\n          cartProducts : state.cartProducts.map(cartProduct => cartProduct.id === action.payload.id ? {\r\n              ...cartProduct, quantity: cartProduct.quantity - 1\r\n          } : cartProduct\r\n          ) \r\n        }\r\n      }\r\n    }\r\n  \r\n\r\n      case 'product/increment' : {\r\n        return {\r\n          ...state,      \r\n          cartProducts : state.cartProducts.map(cartProduct => cartProduct.id === action.payload.id ? {\r\n              ...cartProduct, quantity: cartProduct.quantity + 1\r\n          } : cartProduct\r\n          ) \r\n        }\r\n      }\r\n\r\n      case 'cart/empty' : {\r\n        return {\r\n          ...state,\r\n          cartProducts : []\r\n        }\r\n      }\r\n\r\n    default:      \r\n    // If this reducer doesn't recognize the action type, or doesn't      \r\n    // care about this specific action, return the existing state unchanged \r\n    return state \r\n}}","//This function will try to get any pre-existing state from the LocalStorage, and turn it back into a JSON object\r\n//If none exists, it will return undefined. \r\nexport const loadState = () => {\r\n    try {\r\n      const serialState = localStorage.getItem('appState');\r\n      if (serialState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serialState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n};\r\n\r\n//This function takes the current state, turns it to string and saves it in localStorage.\r\nexport const saveState = (state) => {\r\n    try {\r\n      const serialState = JSON.stringify(state);\r\n      localStorage.setItem('appState', serialState);\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n};\r\n","import { createStore } from 'redux'\r\nimport AppReducer from './AppReducer'\r\nimport {loadState} from './LocalStorage';\r\n\r\n//Getting the persisted state from LocalStorage (Loadstate is declared in LocalStorage.js)\r\nconst persistedState = loadState()\r\n\r\n//Create the store. It will have the default values from the reducer, unless a persisted state exists.\r\nlet store = createStore(AppReducer, persistedState)\r\n\r\n/*export default store*/\r\nexport default store","import { useDispatch, useSelector } from \"react-redux\"\r\nimport Fade from \"react-reveal\"\r\nimport \"./../styles/OrderConfirmation.scss\"\r\n\r\nconst OrderItem = (props) => {\r\n\r\n    const data = (props.item);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Fade bottom>\r\n            <div className = \"order-confirmation__product\">\r\n                    \r\n                    <img  src = {\"./\"+data.image+\".png\"} className = \"order-confirmation__product__image\"/>\r\n                    <div className = \"order-confirmation__product__name\">{data.name}</div>                   \r\n            </div>\r\n            </Fade>\r\n            )\r\n}\r\n\r\nexport default OrderItem\r\n\r\n","import { products } from './ProductsData';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport store from \"./Store\";\r\nimport \"./../styles/OrderConfirmation.scss\"\r\nimport OrderItem from './OrderItem'\r\nimport { Zoom } from 'react-reveal';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst OrderConfirmation = () => {\r\n\r\n    //getting the current cartContent\r\n    const cartItems = state => state.cartProducts;\r\n    const currentCartItems = useSelector(cartItems);\r\n\r\n    const storeUserName = state => state.user.fullName\r\n    const currentUserName = useSelector(storeUserName)\r\n\r\n    let reactElementsArray = [];\r\n        reactElementsArray = currentCartItems.map( data => {\r\n                            return (\r\n                                       <OrderItem item = {data}/> \r\n                                    )\r\n                })\r\n\r\n    return (\r\n        <Zoom>\r\n            <div className = \"order-confirmation\">\r\n                <div className = \"order-confirmation__top-container\">\r\n                    <i class=\"far fa-sad-tear\"></i>\r\n                    <div className = \"order-confirmation__message\">I'm very sorry <span className = \"order-confirmation__user-name\">{currentUserName}</span> but the following products have been removed from your Order:</div>\r\n                </div>\r\n                <div className = \"order-confirmation__products-container\">\r\n                    {reactElementsArray}\r\n                </div>\r\n                <div className = \"order-confirmation__text\">Because, you know... You cannot buy people. At least not in this country. Nor Can you buy Skills. You have to patiently learn them. It takes time. </div>\r\n                <div className = \"order-confirmation__text\">I took that time. Now, I got the Skills :)</div>\r\n                <div className = \"order-confirmation__text\">You could still benefit from it though. Hire me for a week, a month, a year... whatever suits you. And me :)</div>\r\n                <div className = \"order-confirmation__checkout\">\r\n                    <a href = \"clement benezech_EN.pdf\" className = \"order-confirmation__contact-item-container\"><i class=\"far fa-file-pdf\"></i><div>Download Resume (EN)</div></a>\r\n                    <a href = \"clement benezech_FR.pdf\" className = \"order-confirmation__contact-item-container\"><i class=\"far fa-file-pdf\"></i><div>Télécharger CV (FR)</div></a>\r\n                    <a href = \"mailto:clement.benezech@gmail.com\" className = \"order-confirmation__contact-item-container\"><i class=\"far fa-paper-plane\"></i><div>Send me an email</div></a>\r\n                    <a href = \"https://www.linkedin.com/in/clementbenezech/\" className = \"order-confirmation__contact-item-container\"><i class=\"fab fa-linkedin\"></i><div>Visit my profile!</div></a> \r\n                </div>\r\n\r\n                <Link className = 'order-confirmation__checkout' to='/'>back to shop</Link>\r\n            </div>\r\n        </Zoom>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default OrderConfirmation","import { useSelector, useDispatch } from \"react-redux\"\r\nimport store from \"./Store\";\r\nimport \"./../styles/Product.scss\"\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\n\r\n\r\nconst Product = (props) => {\r\n\r\n    //getting the current cartContent\r\n    const cartItems = state => state.cartProducts;\r\n    const currentCartItems = useSelector(cartItems);\r\n\r\n    const dispatch = useDispatch();\r\n    let currentItemQuantity\r\n\r\n\r\n    currentCartItems.map(data => {\r\n        if (data.id == props.productData.id) {\r\n            currentItemQuantity = \"Already \"+data.quantity+\" in Cart\"\r\n        }\r\n    })\r\n\r\n        return(\r\n            <div className = 'product' onClick = { () => {\r\n                props.productData.quantity = 1\r\n                dispatch({ type: 'product/addToCart', payload: props.productData})\r\n                }}>\r\n                <div className = \"product__name\">{props.productData.name}</div>\r\n                <Zoom>\r\n                    <img className = \"product__image\" src = {\"./\"+props.productData.image+\".png\"}/>\r\n                </Zoom>\r\n                <div className = \"product__phrase\">{props.productData.description}</div>\r\n                \r\n                <div className = 'product__buy-container'>\r\n                <p className = \"product__price\">{props.productData.price}</p>\r\n                    <div key = {props.productData.id} id = {props.productData.id } className = \"product__buy\">\r\n                        <i class=\"fas fa-cart-arrow-down\"></i>\r\n                    </div>\r\n                   \r\n                </div>\r\n                <div className = \"product__cart-count\">{currentItemQuantity}</div>\r\n            </div>\r\n\r\n        );\r\n\r\n}\r\nexport default Product;","import { products } from './ProductsData.js';\r\nimport Product from './Product.jsx'\r\nimport \"./../styles/Products.scss\"\r\n\r\nconst Products = () => {\r\n        const reactElementsArray = products.map((data) => {\r\n            return (\r\n                <Product productData = {data}/>\r\n            );\r\n        });\r\n        \r\n        return (\r\n                     <div className  = \"product-list\">\r\n                        {reactElementsArray}\r\n                    </div>  \r\n\r\n\r\n          \r\n        );\r\n\r\n}\r\nexport default Products;\r\n  ","import { useDispatch, useSelector } from \"react-redux\"\r\nimport Fade from \"react-reveal\"\r\n\r\nconst CartItem = (props) => {\r\n\r\n    const data = (props.item);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Fade bottom>\r\n            <div className = \"shopping-cart__product\">\r\n                    \r\n                    <img  src = {\"./\"+data.image+\".png\"} className = \"shopping-cart__product__image\"/>\r\n                    <div className = \"shopping-cart__product__name\">{data.name}</div>\r\n                    <div className = \"shopping-cart__product__quantity-container\">\r\n                        <button className = \"shopping-cart__product__decrement\" /*key = {data.id} id = {data.id }*/ onClick = { () => {\r\n                                dispatch({ type: 'product/decrement', payload: data})\r\n                                }}><i class=\"far fa-minus-square\"></i>\r\n                        </button>\r\n                        <div className = \"shopping-cart__product__quantity\">{data.quantity}</div>\r\n                        <button className = \"shopping-cart__product__increment\" /*key = {data.id} id = {data.id }*/ onClick = { () => {\r\n                                dispatch({ type: 'product/increment', payload: data})\r\n                                }}><i class=\"far fa-plus-square\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className = \"shopping-cart__product__unit-price\">{data.price}</div>\r\n                    <div className = \"shopping-cart__product__global-price\">{data.quantity * data.price}</div>\r\n                    <div className = \"shopping-cart__product__remove\" key = {data.id} id = {data.id } onClick = { () => {\r\n                            dispatch({ type: 'product/removeFromCart', payload: data})\r\n                            }}><i class=\"far fa-trash-alt\"></i>\r\n                    </div>\r\n                   \r\n            </div>\r\n            </Fade>\r\n            )\r\n}\r\n\r\nexport default CartItem\r\n\r\n","import { products } from './ProductsData';\r\nimport { useDispatch, useSelector} from \"react-redux\"\r\nimport store from \"./Store\";\r\nimport \"./../styles/ShoppingCart.scss\"\r\nimport CartItem from './CartItem';\r\nimport { Link } from \"react-router-dom\";\r\nimport CountUp from 'react-countup';\r\n\r\nconst ShoppingCart = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //getting the current cartContent\r\n    const cartItems = state => state.cartProducts;\r\n    const currentCartItems = useSelector(cartItems);\r\n\r\n    const storeUserName = state => state.user.fullName;\r\n    const currentUserName = useSelector(storeUserName);\r\n\r\n        let totalCartAmount = 0;\r\n        currentCartItems.map(data => {\r\n             totalCartAmount = totalCartAmount + (data.price * data.quantity) \r\n        })\r\n\r\n        let orderLink = null;\r\n\r\n        //Activating the orderLink button only if the cart is not empty\r\n        if (totalCartAmount > 0) {\r\n            if (currentUserName != null) {\r\n             orderLink = <Link className = 'shopping-cart__checkout' to='/order-confirmation'>order now!</Link>\r\n            } else {\r\n             orderLink = <div className = 'shopping-cart__checkout shopping-cart__checkout--inactive'>Enter your name to order!</div>\r\n            }\r\n        }\r\n\r\n        let reactElementsArray = [];\r\n        reactElementsArray = currentCartItems.map( data => {\r\n                            return (\r\n                                       <CartItem item = {data}/> \r\n                                    )\r\n                })\r\n    return (\r\n        <div className = \"shopping-cart\">\r\n                    <div className = \"shopping-cart__product-label\">\r\n                        <div className = \"shopping-cart__product-label__name\">Name</div>\r\n                        <div className = \"shopping-cart__product-label__quantity\">Qty</div>\r\n                        <div className = \"shopping-cart__product-label__unit-price\">Price</div>\r\n                        <div className = \"shopping-cart__product__global-price\">Total</div>\r\n                        <div className = \"shopping-cart__product-label__remove\" onClick = { () => {\r\n                            dispatch({ type: 'cart/empty', payload: null})\r\n                            }}><i class=\"far fa-trash-alt\"></i>\r\n                    </div>\r\n                    </div>\r\n                    <div className = \"shopping-cart__products-container\">{reactElementsArray}</div>\r\n                    <div className = \"shopping-cart__total-container\">\r\n                        <div className = \"shopping-cart__total-label\"> Total Amount in basket</div>\r\n                        <CountUp\r\n                                className = \"shopping-cart__total-price\"\r\n                                start={0}\r\n                                end={totalCartAmount}\r\n                                duration={1}/>\r\n                        {/*<div className = \"shopping-cart__total-price\">{totalCartAmount}</div>*/}\r\n                    </div>\r\n                    {orderLink}\r\n                    \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default ShoppingCart","import \"../styles/LoginMenu.scss\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nconst LoginMenu = () => {\r\n\r\n    //getting the current UserName and status\r\n    const storeUserName = state => state.user.fullName;\r\n    const currentUserName = useSelector(storeUserName);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    /*Setting up hooks for fields\r\n    These will be used to maintain a state for the form and allow the send function to work its magic*/\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    //If user is not authentified, then display the login form (here it is just a simple field to enter a name)\r\n    if (currentUserName !== null) {\r\n        //If the user is connected, we display its name and a log out button\r\n        return          <div className = \"login-menu\">\r\n                                <div className = \"login-menu__welcome-message\">{\"Welcome, \"+currentUserName}</div>\r\n                                <button className = \"login-menu__logout\" onClick = { () => {\r\n                                    dispatch({type : \"user/PutUserNameInState\", payload: null})\r\n                                }}><i class=\"fas fa-power-off\"></i></button>\r\n                                <div className = \"login-menu__catchphrase\">{\"Add some Skills, and place your order :)\"}</div>\r\n                        </div>\r\n    }\r\n    else {\r\n        //If the user is not connected, we display the login form. when submitted, it is written in the state using dispatch\r\n        return          <div className = \"login-menu\">\r\n                            <form className = \"login-menu__login-form\" onSubmit = { (e) => {\r\n                                e.preventDefault()\r\n                                if (userName) {\r\n                                    dispatch({type : \"user/PutUserNameInState\", payload: userName})\r\n                                }\r\n                                }\r\n                            }>\r\n                                <label>Please enter your name</label>\r\n                                <input id = \"userName\" onChange = {e => {\r\n                                    setUserName(e.target.value)\r\n                                } }></input>\r\n                                <button className = \"login-menu__login\"><i class=\"fas fa-sign-in-alt\"></i></button>\r\n                            </form>\r\n                        </div>\r\n                \r\n    }\r\n    }\r\n\r\n  \r\nexport default LoginMenu","/*import logo from './logo.svg';*/\n/*import './../App.css';*/\nimport \"./../styles/App.scss\"\nimport Products from './Products';\nimport ShoppingCart from './ShoppingCart';\nimport LoginMenu from \"./LoginMenu\";\n\n\nfunction Shop() {\n  return (\n      <fragment>\n        <div className = \"shop-container\">\n            <Products/>  \n        </div>\n        <LoginMenu/>\n        <ShoppingCart/>\n      </fragment>\n      \n  );\n}\n\nexport default Shop;\n","/*import '../App.css';*/\r\nimport OrderConfirmation from \"./OrderConfirmation\"\r\nimport Shop from \"./Shop\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  \r\n\r\n  return <fragment>\r\n            \r\n        {/* A <Switch> looks through its children <Route>s and\r\n        renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/order-confirmation\">\r\n            <OrderConfirmation />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Shop />\r\n          </Route>\r\n          \r\n        </Switch>\r\n            \r\n        </fragment>\r\n\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from \"./components/Store.js\"\nimport { saveState } from './components/LocalStorage'\nimport { HashRouter } from 'react-router-dom';\n\n//Saving the store state into localStorage (saveState is declared in LocalSorage.js)\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename = '/'>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}