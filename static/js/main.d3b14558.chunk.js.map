{"version":3,"sources":["components/ProductsData.js","components/AppReducer.js","components/Store.js","components/Product.jsx","components/Products.jsx","components/ShoppingCart.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["products","initialState","cartProducts","store","createStore","state","action","type","findIndex","currentProduct","id","payload","map","cartProduct","quantity","newCartProducts","filter","find","console","log","getState","Product","props","currentItemQuantity","currentCartItems","useSelector","dispatch","useDispatch","data","productData","className","onClick","src","image","name","description","price","class","Products","reactElementsArray","ShoppingCart","totalCartAmount","bottom","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3b14558.chunk.js","sourcesContent":["export const products = [\r\n    {   'id' : 0,\r\n        'name' : 'HTML 5 markup',\r\n        'description' : 'Clean, accessible && W3C compliant',\r\n        'price' : 300,\r\n        'image' : \"html5\"\r\n    },\r\n    {   'id' : 1,\r\n        'name' : 'Sass / Scss',\r\n        'description' : 'Clean and nested Scss stylesheets. BEM style.',\r\n        'price' : 400,\r\n        'image' : \"sass\"\r\n    },\r\n    {   'id' : 2,\r\n        'name' : 'Javascript Vanilla',\r\n        'description' : 'Mmmmhhh, Vanilla... No. seriously.',\r\n        'price' : 500,\r\n        'image' : \"jsvanilla\"\r\n    },\r\n    {   'id' : 3,\r\n        'name' : 'ReactJS',\r\n        'description' : \"Functionnal style. It's all about the hooks!\",\r\n        'price' : 600,\r\n        'image' : \"react\"\r\n    },\r\n    {   'id' : 4,\r\n        'name' : 'Redux',\r\n        'description' : 'In the states, they reduced the stores',\r\n        'price' : 300,\r\n        'image' : \"redux\"\r\n    },\r\n    {   'id' : 5,\r\n        'name' : 'React Router',\r\n        'description' : \"So you know where you're going\",\r\n        'price' : 200,\r\n        'image' : \"react-router\"\r\n    },\r\n    {   'id' : 6,\r\n        'name' : 'Clement Benezech',\r\n        'description' : \"clement.benezech@gmail.com\",\r\n        'price' : \"2500\",\r\n        'image' : \"clem\"\r\n    }\r\n    \r\n    \r\n]","const initialState = {cartProducts: []}\r\n// Use the initialState as a default value\r\nexport default function rootReducer(state = initialState, action) {\r\n  // The reducer normally looks at the action type field to decide what happens  \r\n  switch (action.type) {  \r\n    case 'product/addToCart': {\r\n      /*Handling the addProduct case: \r\n        If the product already exists in the state, then increment its quantity by specified quantity\r\n        Else, the product is added to the state with the specified quantity*/\r\n      if (state.cartProducts.findIndex(currentProduct => currentProduct.id === action.payload.id) != -1) {\r\n        return {\r\n          ...state,      \r\n          cartProducts : state.cartProducts.map(cartProduct => cartProduct.id === action.payload.id ? {\r\n              ...cartProduct, quantity: cartProduct.quantity + action.payload.quantity\r\n          } : cartProduct\r\n          ) \r\n        }\r\n      }\r\n      else {\r\n        return {\r\n          ...state,\r\n          cartProducts: [...state.cartProducts, action.payload]\r\n        }\r\n      }\r\n      \r\n  }\r\n      \r\n    case 'product/removeFromCart' : {\r\n      //In case of deletion, we look for a martching ID with filter to return a list without the removed item\r\n      const newCartProducts = state.cartProducts.filter (cartProduct => cartProduct.id !== action.payload.id);\r\n      return {\r\n        ...state,\r\n              cartProducts : newCartProducts\r\n      }\r\n    }\r\n\r\n    case 'product/decrement' : {\r\n        \r\n      if (state.cartProducts.find(currentProduct => currentProduct.id === action.payload.id).quantity === 1) {\r\n        const newCartProducts = state.cartProducts.filter(cartProduct => cartProduct.id !== action.payload.id);\r\n          return {\r\n              ...state,\r\n                    cartProducts : newCartProducts\r\n            } \r\n          }\r\n        else {\r\n        return {\r\n          ...state,      \r\n          cartProducts : state.cartProducts.map(cartProduct => cartProduct.id === action.payload.id ? {\r\n              ...cartProduct, quantity: cartProduct.quantity - 1\r\n          } : cartProduct\r\n          ) \r\n        }\r\n      }\r\n    }\r\n  \r\n\r\n      case 'product/increment' : {\r\n        return {\r\n          ...state,      \r\n          cartProducts : state.cartProducts.map(cartProduct => cartProduct.id === action.payload.id ? {\r\n              ...cartProduct, quantity: cartProduct.quantity + 1\r\n          } : cartProduct\r\n          ) \r\n        }\r\n      }\r\n\r\n    default:      \r\n    // If this reducer doesn't recognize the action type, or doesn't      \r\n    // care about this specific action, return the existing state unchanged \r\n    return state \r\n}}","import { createStore } from 'redux'\r\nimport AppReducer from './AppReducer'\r\n\r\n//Creating the store\r\nlet store = createStore(AppReducer);\r\n//chacking initial value\r\nconsole.log('Initial state: ', store.getState());\r\n\r\nexport default store","import { useSelector, useDispatch } from \"react-redux\"\r\nimport store from \"./Store\";\r\nimport \"./../styles/Product.scss\"\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\n\r\n\r\nconst Product = (props) => {\r\n\r\n    //getting the current cartContent\r\n    const cartItems = state => state.cartProducts;\r\n    const currentCartItems = useSelector(cartItems);\r\n\r\n    const dispatch = useDispatch();\r\n    let currentItemQuantity\r\n\r\n\r\n    currentCartItems.map(data => {\r\n        if (data.id == props.productData.id) {\r\n            currentItemQuantity = \"Already \"+data.quantity+\" in Cart\"\r\n        }\r\n    })\r\n\r\n        return(\r\n            <div className = 'product' onClick = { () => {\r\n                props.productData.quantity = 1\r\n                dispatch({ type: 'product/addToCart', payload: props.productData})\r\n                }}>\r\n                <Zoom>\r\n                    <img className = \"product__image\" src = {\"./\"+props.productData.image+\".png\"}/>\r\n                </Zoom>\r\n                <p className = \"product__name\">{props.productData.name}</p>\r\n                <p className = \"product__phrase\">{props.productData.description}</p>\r\n                \r\n                <div className = 'product__buy-container'>\r\n                <p className = \"product__price\">{props.productData.price}</p>\r\n                    <div key = {props.productData.id} id = {props.productData.id } className = \"product__buy\">\r\n                        <i class=\"fas fa-cart-arrow-down\"></i>\r\n                    </div>\r\n                   \r\n                </div>\r\n                <div className = \"product__cart-count\">{currentItemQuantity}</div>\r\n            </div>\r\n\r\n        );\r\n\r\n}\r\nexport default Product;","import { products } from './ProductsData.js';\r\nimport Product from './Product.jsx'\r\nimport \"./../styles/Products.scss\"\r\n\r\nconst Products = () => {\r\n        const reactElementsArray = products.map((data) => {\r\n            return (\r\n                <Product productData = {data}/>\r\n            );\r\n        });\r\n        \r\n        return (\r\n                     <div className  = \"product-list\">\r\n                        <h1>{\"In need of some skills?\"}</h1>\r\n                        {reactElementsArray}\r\n                    </div>  \r\n\r\n\r\n          \r\n        );\r\n\r\n}\r\nexport default Products;\r\n  ","import { products } from './ProductsData';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport store from \"./Store\";\r\nimport \"./../styles/ShoppingCart.scss\"\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst ShoppingCart = () => {\r\n\r\n    //getting the current cartContent\r\n    const cartItems = state => state.cartProducts;\r\n    const currentCartItems = useSelector(cartItems);\r\n    console.log(currentCartItems);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n        let totalCartAmount = 0;\r\n        currentCartItems.map(data => {\r\n             totalCartAmount = totalCartAmount + (data.price * data.quantity) \r\n        })\r\n\r\n        let reactElementsArray = [];\r\n        reactElementsArray = currentCartItems.map( data => {\r\n                            return (\r\n                                <Fade bottom>\r\n                                    <div className = \"shopping-cart__product\">\r\n                                            \r\n                                            <img  src = {\"/\"+data.image+\".png\"} className = \"shopping-cart__product__image\"/>\r\n                                            <div className = \"shopping-cart__product__name\">{data.name}</div>\r\n                                            <div className = \"shopping-cart__product__quantity-container\">\r\n                                                <button className = \"shopping-cart__product__decrement\" /*key = {data.id} id = {data.id }*/ onClick = { () => {\r\n                                                        dispatch({ type: 'product/decrement', payload: data})\r\n                                                        }}><i class=\"far fa-minus-square\"></i>\r\n                                                </button>\r\n                                                <div className = \"shopping-cart__product__quantity\">{data.quantity}</div>\r\n                                                <button className = \"shopping-cart__product__increment\" /*key = {data.id} id = {data.id }*/ onClick = { () => {\r\n                                                        dispatch({ type: 'product/increment', payload: data})\r\n                                                        }}><i class=\"far fa-plus-square\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className = \"shopping-cart__product__unit-price\">{data.price}</div>\r\n                                            <div className = \"shopping-cart__product__global-price\">{data.quantity * data.price}</div>\r\n                                            <div className = \"shopping-cart__product__remove\" key = {data.id} id = {data.id } onClick = { () => {\r\n                                                    dispatch({ type: 'product/removeFromCart', payload: data})\r\n                                                    }}><i class=\"far fa-trash-alt\"></i>\r\n                                            </div>\r\n                                           \r\n                                    </div>\r\n                                    </Fade>\r\n                                    )\r\n                })\r\n    return (\r\n        <div className = \"shopping-cart\">\r\n                    <div className = \"shopping-cart__product-label\">\r\n                        <div className = \"shopping-cart__product__name\">Name</div>\r\n                        <div className = \"shopping-cart__product-label__quantity\">Qty</div>\r\n                        <div className = \"shopping-cart__product__unit-price\">Price</div>\r\n                        <div className = \"shopping-cart__product__global-price\">Total</div>\r\n                    </div>\r\n                    <div className = \"shopping-cart__products-container\">{reactElementsArray}</div>\r\n                    <div className = \"shopping-cart__total-container\">\r\n                        <div className = \"shopping-cart__total-label\"> Total Amount in basket</div>\r\n                        <div className = \"shopping-cart__total-price\">{totalCartAmount}</div>\r\n                    </div>\r\n                    <a href = \"mailto:clement.benezech@gmail.com\" className = \"shopping-cart__checkout\">Order Now!</a>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default ShoppingCart","/*import logo from './logo.svg';*/\n/*import './../App.css';*/\nimport \"./../styles/App.scss\"\nimport Products from './Products';\nimport ShoppingCart from './ShoppingCart';\n\n\nfunction App() {\n  return (\n      <fragment>\n        <div className = \"shop-container\">\n            <Products/>  \n        </div>\n        <ShoppingCart/>\n      </fragment>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from \"./components/Store.js\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}