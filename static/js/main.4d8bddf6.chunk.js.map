{"version":3,"sources":["components/ProductsData.js","components/AppReducer.js","components/Store.js","components/OrderItem.jsx","components/OrderConfirmation.jsx","components/Product.jsx","components/Products.jsx","components/CartItem.jsx","components/ShoppingCart.jsx","components/Shop.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["products","initialState","cartProducts","store","createStore","state","action","type","findIndex","currentProduct","id","payload","map","cartProduct","quantity","newCartProducts","filter","find","console","log","getState","OrderItem","props","data","item","useDispatch","bottom","className","src","image","name","OrderConfirmation","reactElementsArray","useSelector","class","href","to","Product","currentItemQuantity","currentCartItems","dispatch","productData","onClick","description","price","Products","CartItem","ShoppingCart","totalCartAmount","orderLink","start","end","duration","Shop","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"+RAAaA,G,MAAW,CACpB,CAAI,GAAO,EACP,KAAS,SACT,YAAgB,qCAChB,MAAU,IACV,MAAU,SAEd,CAAI,GAAO,EACP,KAAS,cACT,YAAgB,gDAChB,MAAU,IACV,MAAU,QAEd,CAAI,GAAO,EACP,KAAS,aACT,YAAgB,qCAChB,MAAU,IACV,MAAU,aAEd,CAAI,GAAO,EACP,KAAS,UACT,YAAgB,8CAChB,MAAU,IACV,MAAU,SAEd,CAAI,GAAO,EACP,KAAS,QACT,YAAgB,yCAChB,MAAU,IACV,MAAU,SAEd,CAAI,GAAO,EACP,KAAS,eACT,YAAgB,iCAChB,MAAU,IACV,MAAU,gBAEd,CAAI,GAAO,EACP,KAAS,gBACT,YAAgB,uCAChB,MAAU,MACV,MAAU,UAEd,CAAI,GAAO,EACP,KAAS,iBACT,YAAgB,YAChB,MAAU,MACV,MAAU,WAEd,CAAI,GAAO,EACP,KAAS,mBACT,YAAgB,6BAChB,MAAU,OACV,MAAU,U,8BCrDZC,EAAe,CAACC,aAAc,ICIpC,IAAIC,EAAQC,aDFG,WAAoD,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAEhE,OAAQA,EAAOC,MACb,IAAK,oBAIH,OAAgG,GAA5FF,EAAMH,aAAaM,WAAU,SAAAC,GAAc,OAAIA,EAAeC,KAAOJ,EAAOK,QAAQD,MAC/E,2BACFL,GADL,IAEEH,aAAeG,EAAMH,aAAaU,KAAI,SAAAC,GAAW,OAAIA,EAAYH,KAAOJ,EAAOK,QAAQD,GAAlC,2BAC9CG,GAD8C,IACjCC,SAAUD,EAAYC,SAAWR,EAAOK,QAAQG,WAChED,OAKC,2BACFR,GADL,IAEEH,aAAa,GAAD,mBAAMG,EAAMH,cAAZ,CAA0BI,EAAOK,YAMnD,IAAK,yBAEH,IAAMI,EAAkBV,EAAMH,aAAac,QAAQ,SAAAH,GAAW,OAAIA,EAAYH,KAAOJ,EAAOK,QAAQD,MACpG,OAAO,2BACFL,GADL,IAEQH,aAAea,IAIzB,IAAK,oBAEH,GAAoG,IAAhGV,EAAMH,aAAae,MAAK,SAAAR,GAAc,OAAIA,EAAeC,KAAOJ,EAAOK,QAAQD,MAAII,SAAgB,CACrG,IAAMC,EAAkBV,EAAMH,aAAac,QAAO,SAAAH,GAAW,OAAIA,EAAYH,KAAOJ,EAAOK,QAAQD,MACjG,OAAO,2BACAL,GADP,IAEUH,aAAea,IAI3B,OAAO,2BACFV,GADL,IAEEH,aAAeG,EAAMH,aAAaU,KAAI,SAAAC,GAAW,OAAIA,EAAYH,KAAOJ,EAAOK,QAAQD,GAAlC,2BAC9CG,GAD8C,IACjCC,SAAUD,EAAYC,SAAW,IACjDD,OAOR,IAAK,oBACH,OAAO,2BACFR,GADL,IAEEH,aAAeG,EAAMH,aAAaU,KAAI,SAAAC,GAAW,OAAIA,EAAYH,KAAOJ,EAAOK,QAAQD,GAAlC,2BAC9CG,GAD8C,IACjCC,SAAUD,EAAYC,SAAW,IACjDD,OAKR,IAAK,aACH,OAAO,2BACFR,GADL,IAEEH,aAAe,KAIrB,QAGA,OAAOG,MCvEXa,QAAQC,IAAI,kBAAmBhB,EAAMiB,YAEtBjB,Q,gCCYAkB,EAhBG,SAACC,GAEf,IAAMC,EAAQD,EAAME,KACHC,cAEjB,OACI,cAAC,IAAD,CAAMC,QAAM,EAAZ,SACI,sBAAKC,UAAY,8BAAjB,UAEQ,qBAAMC,IAAO,KAAKL,EAAKM,MAAM,OAAQF,UAAY,uCACjD,qBAAKA,UAAY,oCAAjB,SAAsDJ,EAAKO,a,QC8BhEC,EAnCW,WAGtB,IAGIC,EAOJ,OANIA,EAHqBC,aADP,SAAA5B,GAAK,OAAIA,EAAMH,gBAISU,KAAK,SAAAW,GACvB,OACW,cAAC,EAAD,CAAWC,KAAQD,OAKlD,cAAC,OAAD,UACI,sBAAKI,UAAY,qBAAjB,UACI,sBAAKA,UAAY,oCAAjB,UACI,mBAAGO,MAAM,eACT,qBAAKP,UAAY,8BAAjB,qFAEJ,qBAAKA,UAAY,yCAAjB,SACKK,IAEL,qBAAKL,UAAY,2BAAjB,iKACA,qBAAKA,UAAY,2BAAjB,wDACA,qBAAKA,UAAY,2BAAjB,0HACA,mBAAGQ,KAAO,oCAAoCR,UAAY,+BAA1D,iCACA,cAAC,IAAD,CAAMA,UAAY,0BAA0BS,GAAG,IAA/C,gC,+BCWDC,EAxCC,SAACf,GAGb,IAIIgB,EAHEC,EAAmBN,aADP,SAAA5B,GAAK,OAAIA,EAAMH,gBAG3BsC,EAAWf,cAUb,OANJc,EAAiB3B,KAAI,SAAAW,GACbA,EAAKb,IAAMY,EAAMmB,YAAY/B,KAC7B4B,EAAsB,WAAWf,EAAKT,SAAS,eAK/C,sBAAKa,UAAY,UAAUe,QAAY,WACnCpB,EAAMmB,YAAY3B,SAAW,EAC7B0B,EAAS,CAAEjC,KAAM,oBAAqBI,QAASW,EAAMmB,eAFzD,UAII,qBAAKd,UAAY,gBAAjB,SAAkCL,EAAMmB,YAAYX,OACpD,cAAC,IAAD,UACI,qBAAKH,UAAY,iBAAiBC,IAAO,KAAKN,EAAMmB,YAAYZ,MAAM,WAE1E,qBAAKF,UAAY,kBAAjB,SAAoCL,EAAMmB,YAAYE,cAEtD,sBAAKhB,UAAY,yBAAjB,UACA,mBAAGA,UAAY,iBAAf,SAAiCL,EAAMmB,YAAYG,QAC/C,qBAAkClC,GAAMY,EAAMmB,YAAY/B,GAAKiB,UAAY,eAA3E,SACI,mBAAGO,MAAM,4BADDZ,EAAMmB,YAAY/B,OAKlC,qBAAKiB,UAAY,sBAAjB,SAAwCW,QCnBzCO,G,MAlBE,WACT,IAAMb,EAAqBhC,EAASY,KAAI,SAACW,GACrC,OACI,cAAC,EAAD,CAASkB,YAAelB,OAIhC,OACa,sBAAKI,UAAa,eAAlB,UACG,6BAAK,4BACJK,OCuBVc,G,MAlCE,SAACxB,GAEd,IAAMC,EAAQD,EAAME,KACdgB,EAAWf,cAEjB,OACI,cAAC,IAAD,CAAMC,QAAM,EAAZ,SACI,sBAAKC,UAAY,yBAAjB,UAEQ,qBAAMC,IAAO,KAAKL,EAAKM,MAAM,OAAQF,UAAY,kCACjD,qBAAKA,UAAY,+BAAjB,SAAiDJ,EAAKO,OACtD,sBAAKH,UAAY,6CAAjB,UACI,wBAAQA,UAAY,oCAAwEe,QAAY,WAChGF,EAAS,CAAEjC,KAAM,oBAAqBI,QAASY,KADvD,SAEW,mBAAGW,MAAM,0BAEpB,qBAAKP,UAAY,mCAAjB,SAAqDJ,EAAKT,WAC1D,wBAAQa,UAAY,oCAAwEe,QAAY,WAChGF,EAAS,CAAEjC,KAAM,oBAAqBI,QAASY,KADvD,SAEW,mBAAGW,MAAM,4BAGxB,qBAAKP,UAAY,qCAAjB,SAAuDJ,EAAKqB,QAC5D,qBAAKjB,UAAY,uCAAjB,SAAyDJ,EAAKT,SAAWS,EAAKqB,QAC9E,qBAAKjB,UAAY,iCAAiDjB,GAAMa,EAAKb,GAAKgC,QAAY,WACtFF,EAAS,CAAEjC,KAAM,yBAA0BI,QAASY,KAD5D,SAEW,mBAAGW,MAAM,sBAFqCX,EAAKb,W,iBCoCnEqC,EAvDM,WAEjB,IAAMP,EAAWf,cAIXc,EAAmBN,aADP,SAAA5B,GAAK,OAAIA,EAAMH,gBAGzB8C,EAAkB,EACtBT,EAAiB3B,KAAI,SAAAW,GAChByB,GAAqCzB,EAAKqB,MAAQrB,EAAKT,YAG5D,IAAImC,EAAY,KAGZD,EAAkB,IACjBC,EAAY,cAAC,IAAD,CAAMtB,UAAY,0BAA0BS,GAAG,sBAA/C,yBAGjB,IAAIJ,EAMR,OALIA,EAAqBO,EAAiB3B,KAAK,SAAAW,GACvB,OACW,cAAC,EAAD,CAAUC,KAAQD,OAIjD,sBAAKI,UAAY,gBAAjB,UACY,sBAAKA,UAAY,+BAAjB,UACI,qBAAKA,UAAY,qCAAjB,kBACA,qBAAKA,UAAY,yCAAjB,iBACA,qBAAKA,UAAY,2CAAjB,mBACA,qBAAKA,UAAY,uCAAjB,mBACA,qBAAKA,UAAY,uCAAuCe,QAAY,WAChEF,EAAS,CAAEjC,KAAM,aAAcI,QAAS,QAD5C,SAEO,mBAAGuB,MAAM,0BAGpB,qBAAKP,UAAY,oCAAjB,SAAsDK,IACtD,sBAAKL,UAAY,iCAAjB,UACI,qBAAKA,UAAY,6BAAjB,qCACA,cAAC,IAAD,CACQA,UAAY,6BACZuB,MAAO,EACPC,IAAKH,EACLI,SAAU,OAGrBH,MCrCNI,MAZf,WACE,OACI,qCACE,qBAAK1B,UAAY,iBAAjB,SACI,cAAC,EAAD,MAEJ,cAAC,EAAD,Q,OCkBO2B,MApBf,WAEE,OAAO,mCAID,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,sBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YCVGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAYC,SAAW,IAAvB,SACE,cAAC,IAAD,CAAUjE,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINkE,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.4d8bddf6.chunk.js","sourcesContent":["export const products = [\r\n    {   'id' : 0,\r\n        'name' : 'HTML 5',\r\n        'description' : 'Clean, accessible && W3C compliant',\r\n        'price' : 300,\r\n        'image' : \"html5\"\r\n    },\r\n    {   'id' : 1,\r\n        'name' : 'Sass / Scss',\r\n        'description' : 'Clean and nested Scss stylesheets. BEM style.',\r\n        'price' : 400,\r\n        'image' : \"sass\"\r\n    },\r\n    {   'id' : 2,\r\n        'name' : 'Vanilla JS',\r\n        'description' : 'Mmmmhhh, Vanilla... No. seriously.',\r\n        'price' : 500,\r\n        'image' : \"jsvanilla\"\r\n    },\r\n    {   'id' : 3,\r\n        'name' : 'ReactJS',\r\n        'description' : \"Functional style. It's all about the hooks!\",\r\n        'price' : 600,\r\n        'image' : \"react\"\r\n    },\r\n    {   'id' : 4,\r\n        'name' : 'Redux',\r\n        'description' : 'In the states, they reduced the stores',\r\n        'price' : 300,\r\n        'image' : \"redux\"\r\n    },\r\n    {   'id' : 5,\r\n        'name' : 'React Router',\r\n        'description' : \"So you know where you're going\",\r\n        'price' : 200,\r\n        'image' : \"react-router\"\r\n    },\r\n    {   'id' : 6,\r\n        'name' : 'Native French',\r\n        'description' : \"It's like... you know. Super Fluent!\",\r\n        'price' : \"279\",\r\n        'image' : \"france\"\r\n    },\r\n    {   'id' : 7,\r\n        'name' : 'Fluent english',\r\n        'description' : \"For real!\",\r\n        'price' : \"359\",\r\n        'image' : \"england\"\r\n    },\r\n    {   'id' : 8,\r\n        'name' : 'Clement Benezech',\r\n        'description' : \"clement.benezech@gmail.com\",\r\n        'price' : \"2500\",\r\n        'image' : \"clem\"\r\n    },\r\n    \r\n    \r\n]","const initialState = {cartProducts: []}\r\n// Use the initialState as a default value\r\nexport default function rootReducer(state = initialState, action) {\r\n  // The reducer normally looks at the action type field to decide what happens  \r\n  switch (action.type) {  \r\n    case 'product/addToCart': {\r\n      /*Handling the addProduct case: \r\n        If the product already exists in the state, then increment its quantity by specified quantity\r\n        Else, the product is added to the state with the specified quantity*/\r\n      if (state.cartProducts.findIndex(currentProduct => currentProduct.id === action.payload.id) != -1) {\r\n        return {\r\n          ...state,      \r\n          cartProducts : state.cartProducts.map(cartProduct => cartProduct.id === action.payload.id ? {\r\n              ...cartProduct, quantity: cartProduct.quantity + action.payload.quantity\r\n          } : cartProduct\r\n          ) \r\n        }\r\n      }\r\n      else {\r\n        return {\r\n          ...state,\r\n          cartProducts: [...state.cartProducts, action.payload]\r\n        }\r\n      }\r\n      \r\n  }\r\n      \r\n    case 'product/removeFromCart' : {\r\n      //In case of deletion, we look for a martching ID with filter to return a list without the removed item\r\n      const newCartProducts = state.cartProducts.filter (cartProduct => cartProduct.id !== action.payload.id);\r\n      return {\r\n        ...state,\r\n              cartProducts : newCartProducts\r\n      }\r\n    }\r\n\r\n    case 'product/decrement' : {\r\n        \r\n      if (state.cartProducts.find(currentProduct => currentProduct.id === action.payload.id).quantity === 1) {\r\n        const newCartProducts = state.cartProducts.filter(cartProduct => cartProduct.id !== action.payload.id);\r\n          return {\r\n              ...state,\r\n                    cartProducts : newCartProducts\r\n            } \r\n          }\r\n        else {\r\n        return {\r\n          ...state,      \r\n          cartProducts : state.cartProducts.map(cartProduct => cartProduct.id === action.payload.id ? {\r\n              ...cartProduct, quantity: cartProduct.quantity - 1\r\n          } : cartProduct\r\n          ) \r\n        }\r\n      }\r\n    }\r\n  \r\n\r\n      case 'product/increment' : {\r\n        return {\r\n          ...state,      \r\n          cartProducts : state.cartProducts.map(cartProduct => cartProduct.id === action.payload.id ? {\r\n              ...cartProduct, quantity: cartProduct.quantity + 1\r\n          } : cartProduct\r\n          ) \r\n        }\r\n      }\r\n\r\n      case 'cart/empty' : {\r\n        return {\r\n          ...state,\r\n          cartProducts : []\r\n        }\r\n      }\r\n\r\n    default:      \r\n    // If this reducer doesn't recognize the action type, or doesn't      \r\n    // care about this specific action, return the existing state unchanged \r\n    return state \r\n}}","import { createStore } from 'redux'\r\nimport AppReducer from './AppReducer'\r\n\r\n//Creating the store\r\nlet store = createStore(AppReducer);\r\n//chacking initial value\r\nconsole.log('Initial state: ', store.getState());\r\n\r\nexport default store","import { useDispatch, useSelector } from \"react-redux\"\r\nimport Fade from \"react-reveal\"\r\nimport \"./../styles/OrderConfirmation.scss\"\r\n\r\nconst OrderItem = (props) => {\r\n\r\n    const data = (props.item);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Fade bottom>\r\n            <div className = \"order-confirmation__product\">\r\n                    \r\n                    <img  src = {\"./\"+data.image+\".png\"} className = \"order-confirmation__product__image\"/>\r\n                    <div className = \"order-confirmation__product__name\">{data.name}</div>                   \r\n            </div>\r\n            </Fade>\r\n            )\r\n}\r\n\r\nexport default OrderItem\r\n\r\n","import { products } from './ProductsData';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport store from \"./Store\";\r\nimport \"./../styles/OrderConfirmation.scss\"\r\nimport OrderItem from './OrderItem'\r\nimport { Zoom } from 'react-reveal';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst OrderConfirmation = () => {\r\n\r\n    //getting the current cartContent\r\n    const cartItems = state => state.cartProducts;\r\n    const currentCartItems = useSelector(cartItems);\r\n\r\n    let reactElementsArray = [];\r\n        reactElementsArray = currentCartItems.map( data => {\r\n                            return (\r\n                                       <OrderItem item = {data}/> \r\n                                    )\r\n                })\r\n\r\n    return (\r\n        <Zoom>\r\n            <div className = \"order-confirmation\">\r\n                <div className = \"order-confirmation__top-container\">\r\n                    <i class=\"fas fa-ban\"></i>\r\n                    <div className = \"order-confirmation__message\">Sorry, but the following products have been removed from your Order:</div>\r\n                </div>\r\n                <div className = \"order-confirmation__products-container\">\r\n                    {reactElementsArray}\r\n                </div>\r\n                <div className = \"order-confirmation__text\">Because, you know... You cannot buy people. At least not in this country. Nor Can you buy Skills. You have to patiently learn them. It takes time. </div>\r\n                <div className = \"order-confirmation__text\">I took that time. Now, I got the Skills :)</div>\r\n                <div className = \"order-confirmation__text\">You could still benefit from it though. Hire me for a week, a month, a year... whatever suits you. And me :)</div>\r\n                <a href = \"mailto:clement.benezech@gmail.com\" className = \"order-confirmation__checkout\">Send me an email :)</a>\r\n                <Link className = 'shopping-cart__checkout' to='/'>back to shop</Link>\r\n            </div>\r\n        </Zoom>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default OrderConfirmation","import { useSelector, useDispatch } from \"react-redux\"\r\nimport store from \"./Store\";\r\nimport \"./../styles/Product.scss\"\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\n\r\n\r\nconst Product = (props) => {\r\n\r\n    //getting the current cartContent\r\n    const cartItems = state => state.cartProducts;\r\n    const currentCartItems = useSelector(cartItems);\r\n\r\n    const dispatch = useDispatch();\r\n    let currentItemQuantity\r\n\r\n\r\n    currentCartItems.map(data => {\r\n        if (data.id == props.productData.id) {\r\n            currentItemQuantity = \"Already \"+data.quantity+\" in Cart\"\r\n        }\r\n    })\r\n\r\n        return(\r\n            <div className = 'product' onClick = { () => {\r\n                props.productData.quantity = 1\r\n                dispatch({ type: 'product/addToCart', payload: props.productData})\r\n                }}>\r\n                <div className = \"product__name\">{props.productData.name}</div>\r\n                <Zoom>\r\n                    <img className = \"product__image\" src = {\"./\"+props.productData.image+\".png\"}/>\r\n                </Zoom>\r\n                <div className = \"product__phrase\">{props.productData.description}</div>\r\n                \r\n                <div className = 'product__buy-container'>\r\n                <p className = \"product__price\">{props.productData.price}</p>\r\n                    <div key = {props.productData.id} id = {props.productData.id } className = \"product__buy\">\r\n                        <i class=\"fas fa-cart-arrow-down\"></i>\r\n                    </div>\r\n                   \r\n                </div>\r\n                <div className = \"product__cart-count\">{currentItemQuantity}</div>\r\n            </div>\r\n\r\n        );\r\n\r\n}\r\nexport default Product;","import { products } from './ProductsData.js';\r\nimport Product from './Product.jsx'\r\nimport \"./../styles/Products.scss\"\r\n\r\nconst Products = () => {\r\n        const reactElementsArray = products.map((data) => {\r\n            return (\r\n                <Product productData = {data}/>\r\n            );\r\n        });\r\n        \r\n        return (\r\n                     <div className  = \"product-list\">\r\n                        <h1>{\"In need of some skills?\"}</h1>\r\n                        {reactElementsArray}\r\n                    </div>  \r\n\r\n\r\n          \r\n        );\r\n\r\n}\r\nexport default Products;\r\n  ","import { useDispatch, useSelector } from \"react-redux\"\r\nimport Fade from \"react-reveal\"\r\n\r\nconst CartItem = (props) => {\r\n\r\n    const data = (props.item);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Fade bottom>\r\n            <div className = \"shopping-cart__product\">\r\n                    \r\n                    <img  src = {\"./\"+data.image+\".png\"} className = \"shopping-cart__product__image\"/>\r\n                    <div className = \"shopping-cart__product__name\">{data.name}</div>\r\n                    <div className = \"shopping-cart__product__quantity-container\">\r\n                        <button className = \"shopping-cart__product__decrement\" /*key = {data.id} id = {data.id }*/ onClick = { () => {\r\n                                dispatch({ type: 'product/decrement', payload: data})\r\n                                }}><i class=\"far fa-minus-square\"></i>\r\n                        </button>\r\n                        <div className = \"shopping-cart__product__quantity\">{data.quantity}</div>\r\n                        <button className = \"shopping-cart__product__increment\" /*key = {data.id} id = {data.id }*/ onClick = { () => {\r\n                                dispatch({ type: 'product/increment', payload: data})\r\n                                }}><i class=\"far fa-plus-square\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className = \"shopping-cart__product__unit-price\">{data.price}</div>\r\n                    <div className = \"shopping-cart__product__global-price\">{data.quantity * data.price}</div>\r\n                    <div className = \"shopping-cart__product__remove\" key = {data.id} id = {data.id } onClick = { () => {\r\n                            dispatch({ type: 'product/removeFromCart', payload: data})\r\n                            }}><i class=\"far fa-trash-alt\"></i>\r\n                    </div>\r\n                   \r\n            </div>\r\n            </Fade>\r\n            )\r\n}\r\n\r\nexport default CartItem\r\n\r\n","import { products } from './ProductsData';\r\nimport { useDispatch, useSelector} from \"react-redux\"\r\nimport store from \"./Store\";\r\nimport \"./../styles/ShoppingCart.scss\"\r\nimport CartItem from './CartItem';\r\nimport { Link } from \"react-router-dom\";\r\nimport CountUp from 'react-countup';\r\n\r\nconst ShoppingCart = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //getting the current cartContent\r\n    const cartItems = state => state.cartProducts;\r\n    const currentCartItems = useSelector(cartItems);\r\n\r\n        let totalCartAmount = 0;\r\n        currentCartItems.map(data => {\r\n             totalCartAmount = totalCartAmount + (data.price * data.quantity) \r\n        })\r\n\r\n        let orderLink = null;\r\n\r\n        //Activating the orderLink button only if the cart is not empty\r\n        if (totalCartAmount > 0) {\r\n             orderLink = <Link className = 'shopping-cart__checkout' to='/order-confirmation'>order now!</Link>\r\n        }\r\n\r\n        let reactElementsArray = [];\r\n        reactElementsArray = currentCartItems.map( data => {\r\n                            return (\r\n                                       <CartItem item = {data}/> \r\n                                    )\r\n                })\r\n    return (\r\n        <div className = \"shopping-cart\">\r\n                    <div className = \"shopping-cart__product-label\">\r\n                        <div className = \"shopping-cart__product-label__name\">Name</div>\r\n                        <div className = \"shopping-cart__product-label__quantity\">Qty</div>\r\n                        <div className = \"shopping-cart__product-label__unit-price\">Price</div>\r\n                        <div className = \"shopping-cart__product__global-price\">Total</div>\r\n                        <div className = \"shopping-cart__product-label__remove\" onClick = { () => {\r\n                            dispatch({ type: 'cart/empty', payload: null})\r\n                            }}><i class=\"far fa-trash-alt\"></i>\r\n                    </div>\r\n                    </div>\r\n                    <div className = \"shopping-cart__products-container\">{reactElementsArray}</div>\r\n                    <div className = \"shopping-cart__total-container\">\r\n                        <div className = \"shopping-cart__total-label\"> Total Amount in basket</div>\r\n                        <CountUp\r\n                                className = \"shopping-cart__total-price\"\r\n                                start={0}\r\n                                end={totalCartAmount}\r\n                                duration={1}/>\r\n                        {/*<div className = \"shopping-cart__total-price\">{totalCartAmount}</div>*/}\r\n                    </div>\r\n                    {orderLink}\r\n                    \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default ShoppingCart","/*import logo from './logo.svg';*/\n/*import './../App.css';*/\nimport \"./../styles/App.scss\"\nimport Products from './Products';\nimport ShoppingCart from './ShoppingCart';\n\n\nfunction Shop() {\n  return (\n      <fragment>\n        <div className = \"shop-container\">\n            <Products/>  \n        </div>\n        <ShoppingCart/>\n      </fragment>\n      \n  );\n}\n\nexport default Shop;\n","/*import '../App.css';*/\r\nimport OrderConfirmation from \"./OrderConfirmation\"\r\nimport Shop from \"./Shop\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  return <fragment>\r\n            \r\n        {/* A <Switch> looks through its children <Route>s and\r\n        renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/order-confirmation\">\r\n            <OrderConfirmation />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Shop />\r\n          </Route>\r\n          \r\n        </Switch>\r\n            \r\n        </fragment>\r\n\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from \"./components/Store.js\"\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename = '/'>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}